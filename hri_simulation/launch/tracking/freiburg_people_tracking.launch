<?xml version="1.0"?>


<!-- 
    Based on the launcher with same name at package spencer_people_tracking_launch
    
Starts the multi-modal, plug-and-play people tracking framework developed mainly at the Social Robotics Lab, University of Freiburg. -->

<launch>
    <!-- Launch file arguments -->
    <arg name="topic_prefix" default=""/>
    <arg name="subscriber_queue_size" default="1"/>
    <arg name="static_map_filter" default="true"/>
    <arg name="rgbd" default="false"/>
    <arg name="laser_low_confidence_detections" default="true"/>  
    <arg name="tracker" default="true"/>
    <arg name="occlusion_geodesics" default="false"/>
    <arg name="base_frame" default="/base_link" />
    <arg name="fuse_detections" default="true"/>
    <arg name="hog"        default="false"/>    
    <arg name="map_frame_id"        default="odom"/>    


 <!-- Detection-to-detection fusion pipeline. NOTE: Detectors need to be launched separately via
         roslaunch spencer_people_tracking_launch front_rgbd_detectors.launch
         roslaunch spencer_people_tracking_launch rear_rgbd_detectors.launch
         roslaunch spencer_people_tracking_launch laser_detectors.launch rear:=true
    -->
    <group if="$(arg fuse_detections)">
    <!-- Resulting detections will be filtered by static map later on, see further below -->
    <remap from="$(arg topic_prefix)/spencer/perception/detected_persons" 
        to="$(arg topic_prefix)/spencer/perception/detected_persons_unfiltered" 
        if="$(arg static_map_filter)"/>

    <remap from="$(arg topic_prefix)/spencer/perception_internal/detected_person_association/lasers_high_recall_aggregated" 
        to="$(arg topic_prefix)/spencer/perception_internal/detected_person_association/lasers_high_recall_aggregated_unfiltered" 
        if="$(arg static_map_filter)"/>

    <include file="$(find hri_simulation)/launch/person_association/detection_to_detection_fusion_pipeline.launch">
        <!-- Also fuse RGB-D detector -->
        <arg name="rgbd"       value="$(arg rgbd)"/>
        <arg name="hog"        value="$(arg hog)"/>    
        <arg name="base_frame" value="$(arg base_frame)" />
        <arg name="topic_prefix" value="$(arg topic_prefix)"/>
    </include>
    </group>

    <!-- Filter detections by static map -->
    <group ns="$(arg topic_prefix)/spencer/perception_internal/people_detection"  if="$(arg static_map_filter)">
        <!-- Normal detections -->
        <node name="filter_detections_by_static_map" pkg="spencer_tracking_utils" type="filter_detections_by_static_map" output="screen">

            <param name="input_detections" value="$(arg topic_prefix)/spencer/perception/detected_persons_unfiltered"/>
            <param name="output_detections" value="$(arg topic_prefix)/spencer/perception/detected_persons"/>
            
            <rosparam param="modalities_to_always_passthrough">[rgbd]</rosparam>  <!-- only filter out laser and monocular vision, as RGB-D does not have many false positives -->
        </node>

        <!-- High-recall detections -->
        <node name="filter_low_confidence_detections_by_static_map" pkg="spencer_tracking_utils" type="filter_detections_by_static_map" output="screen">
            <param name="input_detections" value="$(arg topic_prefix)/spencer/perception/detected_persons_unfiltered"/>
            <param name="output_detections" value="$(arg topic_prefix)/spencer/perception/detected_persons"/>
            
            <rosparam param="modalities_to_always_passthrough">[rgbd]</rosparam>  <!-- only filter out laser and monocular vision, as RGB-D does not have many false positives -->
        </node>
    
    </group>


    <!-- People tracker -->
    <group ns="$(arg topic_prefix)/spencer/perception_internal/people_tracking" if="$(arg tracker)">

        <include file="$(find hri_simulation)/launch/tracking/nnt.launch">
            <arg name="topic_prefix" value="$(arg topic_prefix)"/>

            <arg name="subscriber_queue_size" value="$(arg subscriber_queue_size)"/>
            <arg name="use_imm" value="true"/>
            
            <arg name="occlusion_param_file" value="occlusion_geodesics_manager_dynamic.yaml" if="$(arg occlusion_geodesics)"/> <!-- NOTE: Only uses front laser!!! -->
            <arg name="use_laser_shade_occlusion_manager" value="true" if="$(arg occlusion_geodesics)"/>
        </include>

        <rosparam param="srl_nearest_neighbor_tracker/additional_low_confidence_detections" if="$(arg laser_low_confidence_detections)" subst_value="True">$(arg topic_prefix)/spencer/perception/lasers_high_recall_aggregated</rosparam>

        <rosparam param="srl_nearest_neighbor_tracker/additional_low_confidence_detections" unless="$(arg laser_low_confidence_detections)"></rosparam>       
        <rosparam param="srl_nearest_neighbor_tracker/world_frame" subst_value="True">$(arg map_frame_id)</rosparam>

    </group>

    <!-- Filter tracks that are output by people tracker (e.g. visually confirmed tracks, moving tracks etc. on separate topics) -->
    <include file="$(find hri_simulation)/launch/tracking/filter_tracks.launch">
        <arg name="topic_prefix" value="$(arg topic_prefix)"/>
    </include>

</launch>
