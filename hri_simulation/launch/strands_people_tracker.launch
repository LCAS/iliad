<?xml version="1.0"?>


<!--  
     To be used with hri_simulation iliad_sim_hri.launch
     Purpose is to simulate people tracking to be used with strands human aware navigation

-->



<launch>
    <arg name="queue_size" value="5" />


    <arg name="camera_namespace" value="/robot1/kinect2" />

    <arg name="rgb_image" value="/hd/image_color_rect" />
    <arg name="camera_info_rgb" value="/hd/camera_info" />

    <arg name="depth_image" value="/sd/image_depth_rect" />
    <arg name="camera_info_depth" value="/depth/camera_info" />

    <arg name="mono_image" value="/sd/image_ir_rect" />        

    <arg name="motion_parameters" value="/visual_odometry/motion_matrix" />
    <arg name="upper_body_detections" value="/upper_body_detector/detections" />
    <arg name="visual_odometry" value="/visual_odometry/motion_matrix" />
    <arg name="people_array" value="/mdl_people_tracker/people_array" />
    <arg name="people_image" value="/mdl_people_tracker/image" />
    <arg name="people_markers" value="/mdl_people_tracker/marker_array" />
    <arg name="people_poses" value="/mdl_people_tracker/pose_array" />
    <arg name="tf_target_frame" value="" />

    <!-- Fixed Ground Plane -->
    <include file="$(find ground_plane_estimation)/launch/ground_plane_fixed.launch">
        <arg name="param_file" value="$(find hri_simulation)/config/fixed_gp.yaml" />
    </include>

    <!-- Ground Plane is published after a ptu state is received. This dummy message forces gp publishing -->
    <node name="fake_ptu" pkg="rostopic" type="rostopic"
        args="pub /ptu/state sensor_msgs/JointState '{header: {seq: 0, stamp: {secs: 0, nsecs: 0}, frame_id: 'base_link'},
        name: ['tikitiki'],
        position: [0],
        velocity: [0],
        effort: [0]}' -r 0.5"
    />



    <!-- Visual Odometry -->
    <node pkg="visual_odometry" type="visual_odometry" name="visual_odometry" output="screen" respawn="true">
        <param name="queue_size" value="$(arg queue_size)" type="int"/>
        <param name="camera_namespace" value="$(arg camera_namespace)" type="string"/>
        <param name="depth_image" value="$(arg depth_image)" type="string"/>
        <param name="mono_image" value="$(arg mono_image)" type="string"/>
        <param name="camera_info_depth" value="$(arg camera_info_depth)" type="string"/>
        <param name="motion_parameters" value="$(arg motion_parameters)" type="string"/>
    </node>


    <!-- Upper Body Detector -->
    <include file="$(find upper_body_detector)/launch/upper_body_detector.launch">
        <arg name="camera_namespace" value="$(arg camera_namespace)"/>
        <arg name="rgb_image" value="$(arg rgb_image)"/>
        <arg name="depth_image" value="$(arg depth_image)"/>
        <arg name="camera_info_depth" value="$(arg camera_info_depth)"/>
    </include>



    <!-- Leg tracker -->
    <node pkg="leg_detector" type="leg_detector" name="leg_detector" args="scan:=/robot1/safety_laser_fil fixed_frame:=world $(find leg_detector)/config/trained_leg_detector.yaml" output="screen">
            <!-- Load detector config -->
            <rosparam command="load" file="$(find hri_simulation)/config/leg_detector.yaml"/>
    </node>
    <!-- Detector to Pose Array -->
    <include file="$(find detector_msg_to_pose_array)/launch/to_pose_array.launch"/>

    <!-- Bayes People Tracker -->



</launch> 



