<?xml version="1.0"?>
 <!-- 
     Launches a world where forklift is facing a human that walks towards it and
     
     This will be used to test strands hri navigation with spencer trackers

  -->
 
<launch>
    
  <!-- PARAMS ...................................................... -->
  <arg name="useGui" default="true"/> <!-- requires velodyne_simulator -->


  <!-- TF prefix of robot -->
  <arg name="prefix" default="robot1"/>

  <!-- Enable/disable sensor simulation -->
  <arg name="velodyne" default="true"/> <!-- requires velodyne_simulator -->
  <arg name="kinect2"  default="true"/>   <!-- Uses iai kinect2 description -->
  <arg name="kinect1"  default="false"/> <!-- deprecated (only used for pallet detection?) -->

  <rosparam command="load" file="$(find orunav_params)/config/global.cfg"/>
  <rosparam command="load" file="$(find orunav_params)/config/citi1_simulation.cfg" />


  <!-- INCLUDES .................................................... -->


  <!-- WORLD A variation of the original with only one person as described avobe  -->
  <include file="$(find hri_simulation)/launch/ncfm_world.launch">
        <arg name="gui" value="$(arg useGui)"/>
  </include>



  <!-- LOAD MAP -->
  <include file="$(find hri_simulation)/launch/ncfm_map_server.launch"/>

  <!-- LOAD GAZEBO Model  -->
  <include file="$(find hri_simulation)/launch/cititruck_ncfm.launch">
    <arg name="tf_prefix" value="$(arg prefix)"/>
    <arg name="velodyne" value="$(arg velodyne)"/>
    <arg name="kinect2" value="$(arg kinect2)"/>
    <arg name="kinect1" value="$(arg kinect1)"/>

    <arg name="robot_pose_x" default="7.23"/>
    <arg name="robot_pose_y" default="-2.7"/>
    <arg name="robot_pose_roll" default="0"/>
    <arg name="robot_pose_pitch" default="0"/>
    <arg name="robot_pose_yaw" default="0"/>
  </include>

 
 
 <group ns="$(arg prefix)">
     <!-- 
          This param needs to be set under this group, or 
          robot_state_publisher wont publish tf properly 
     -->  
    <param name="tf_prefix" value="$(arg prefix)" />

       <!-- Filters out laser points hitting robot frame/wheels

       These filters are also run by move_base.launch

      <node pkg="laser_filters" type="scan_to_scan_filter_chain" name="safety_filter">
        <rosparam command="load" file="$(find demo)/params/safety_laser_filter.yaml" />
        <remap from="scan" to="safety_laser" />
        <remap from="scan_filtered" to="safety_laser_fil" />
      </node>
      
      <node pkg="laser_filters" type="scan_to_scan_filter_chain" name="nav_filter">
        <rosparam command="load" file="$(find demo)/params/nav_laser_filter.yaml" />
        <remap from="scan" to="nav_laser" />
        <remap from="scan_filtered" to="nav_laser_fil" />
      </node>
      -->

    <!-- 
    Strands human tracking modules 
     -->
    <include file="$(find hri_simulation)/launch/strands_people_tracker.launch"/>

 
 </group>




<!-- navigation -->
<include file="$(find demo)/launch/move_base.launch"/>


<!-- Visualization -->
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find demo)/rviz/iliad_cititruck_nav_human_aware.rviz" if="$(arg useGui)"/>

</launch>
