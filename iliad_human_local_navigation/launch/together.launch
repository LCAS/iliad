<?xml version="1.0"?>

<!--

Launches all the necessary modules for the human aware navigation.
To test this with tejas's NCFM bags:
- Launch this launcher providing the addecuate bagFilename and map_file, i.e.

	roslaunch iliad_human_local_navigation together.launch bagFilename:=/home/manolofc/iliad/tj/S1-T2.1-A2.bag map_file:=/home/manolofc/iliad/tj/S1-T2.1-A2.yaml

- Launch the rosbag player WITH CLOCK!
	rosbag play /home/manolofc/iliad/tj/S1-T2.1-A2.bag - - clock

You should see rviz with all the data running.
-->

<launch>
	<arg name="robot_id" default="5"/>
	<arg name="map_frame_id" value="map_laser2d"/>
	<arg name="map_topic" value="/maps/map_laser2d"/>
	<param name="/use_sim_time" value="true"/>

	<arg name="prefix" default="robot$(arg robot_id)"/>
	<arg name="topic_prefix" default="/$(arg prefix)"/>
	<arg name="base_frame_id" default="$(arg topic_prefix)/base_link"/>

	<arg name="bagFilename"    default="/home/manolofc/iliad/tj/S1-T1.1-A2.bag"/>
	<arg name="map_file"       default="/home/manolofc/iliad/tj/S1-T1.1-A2.yaml"/>
	<arg name="robot_frame_id" default="robot5/base_footprint"/>
  <arg name="world_frame_id" default="world"/>
  <arg name="goal_topic" default="/$(arg prefix)/move_base_simple/goal"/>
	<arg name="current_goal_topic" default="/$(arg prefix)/move_base/current_goal"/>

	<!-- Publishes map and fake localization tf if wanted  .................-->
	<include file="$(find iliad_launch_system)/launch/sites/iliad_map_server.launch">
		<arg name="mapserver_config_file" value="$(arg map_file)"/>
		<arg name="fake_loc" value="false"/>
		<arg name="map_frame_id" value="$(arg map_frame_id)"/>
	</include>

	<!-- Filters out laser points hitting robot frame/wheels .................-->
	<node pkg="laser_filters" type="scan_to_scan_filter_chain" name="safety_filter">
		<rosparam command="load" file="$(find base_simulation)/params/safety_laser_filter_real.yaml" />
		<remap from="scan" to="/$(arg prefix)/sensors/laser2d_floor" />
		<remap from="scan_filtered" to="/$(arg prefix)/sensors/laser2d_floor_fil" />
	</node>
	<node pkg="laser_filters" type="scan_to_scan_filter_chain" name="nav_filter">
		<rosparam command="load" file="$(find base_simulation)/params/nav_laser_filter_real.yaml" />
		<remap from="scan" to="/$(arg prefix)/sensors/laser2d_top" />
		<remap from="scan_filtered" to="/$(arg prefix)/sensors/laser2d_top_fil" />
	</node>

	<!-- Corrects localization  .................-->
	<node pkg="amcl" type="amcl" name="amcl" output="screen">
			  <remap from="scan" to="/$(arg prefix)/sensors/laser2d_floor_fil"/>
				<remap from="map" to="$(arg map_topic)"/>
				<param name="initial_pose_x" value="-21.8"/>
				<param name="initial_pose_y" value="-38.62"/>
				<param name="initial_pose_a" value="-0.628"/>

				<param name="use_map_topic" value="true"/>
				<!-- Produces tf between map and world -->
				<param name="odom_frame_id" type="string"  value="$(arg world_frame_id)"/>
				<param name="base_frame_id" type="string"  value="$(arg base_frame_id)"/>
				<param name="global_frame_id" type="string"  value="$(arg map_frame_id)"/>
				<param name="gui_publish_rate" value="10.0"/>

			  <param name="laser_max_beams" value="55"/>
			  <param name="min_particles" value="1000"/>
			  <param name="max_particles" value="5000"/>
			  <param name="kld_err" value="0.1"/>
			  <param name="kld_z" value="0.9"/>
				<param name="update_min_d" value="0.1"/>
			  <param name="update_min_a" value="0.15"/>
			  <param name="resample_interval" value="1"/>
			  <param name="transform_tolerance" value="0.1"/>
			  <param name="recovery_alpha_slow" value="0.0"/>
			  <param name="recovery_alpha_fast" value="0.0"/>

			  <param name="odom_model_type" value="diff"/>
				<param name="odom_alpha1" value="0.8"/>
				<param name="odom_alpha2" value="0.8"/>
				<param name="odom_alpha3" value="0.9"/>
				<param name="odom_alpha4" value="0.8"/>
			  <param name="odom_alpha5" value="0.8"/>

			  <param name="laser_z_hit" value="0.65"/>
			  <param name="laser_z_short" value="0.05"/>
			  <param name="laser_z_max" value="0.45"/>
			  <param name="laser_z_rand" value="0.5"/>
			  <param name="laser_sigma_hit" value="0.2"/>
			  <param name="laser_lambda_short" value="0.1"/>
			  <param name="laser_lambda_short" value="0.1"/>
			  <param name="laser_model_type" value="likelihood_field_prob"/>
			  <param name="laser_likelihood_max_dist" value="0.5"/>
			</node>

	<!-- Navigation  ................. -->
	<include file="$(find nav_simulation)/launch/move_base_dwa.launch">
		<arg name="robot_id" value="$(arg robot_id)"/>
		<arg name="odom_topic" value="control/odom"/>
		<arg name="cmd_vel_topic_rel" value="control/controller/cmd_vel"/>
		<arg name="map_frame" value="/$(arg map_frame_id)"/>
		<arg name="map_topic" value="$(arg map_topic)"/>
		<arg name="base_frame" value="$(arg base_frame_id)"/>
	</include>

	<!-- Makes navigation believe we provide a target  ................. -->
	<include file="$(find iliad_human_local_navigation)/launch/fake-target-provider.launch">
		<arg name="bagFilename" value="$(arg bagFilename)"/>
		<arg name="robot_frame_id" value="$(arg robot_frame_id)"/>
		<arg name="world_frame_id" value="$(arg world_frame_id)"/>
		<arg name="goal_topic" value="$(arg goal_topic)"/>
	</include>

	<!-- publishes kinect data in format compatible for  people detector  ................. -->
	<include file="$(find kinect2_bagplayer)/launch/kinect_player.launch">
		<arg name="robot_id" value="$(arg robot_id)"/>
	</include>

		<!-- People detector  .................-->
		<include file="$(find rgbd_gpu_person_detector)/launch/iliad_kinect2.launch">
			<arg name="robot_name" value="$(arg prefix)"/>
		</include>

	  <!-- People tracking  .................-->
		<include file="$(find iliad_human_perception_launch)/launch/tracking/person_tracking_pipeline.launch">
			<arg name="robot_name" value="$(arg prefix)"/>
		</include>

  <!-- Benefits!  ................. -->
	<include file="$(find hri_simulation)/launch/hrsi.launch">
		<arg name="robot_id" value="$(arg robot_id)"/>
		<arg name="base_frame" value="$(arg base_frame_id)"/>
		<arg name="ppl_topic" value="$(arg topic_prefix)/people_tracker/positions"/>
		<arg name="person_topic" value="$(arg topic_prefix)/human_perception/tracked_persons"/>
		<arg name="target_frame" value="$(arg base_frame_id)"/>
		<arg name="map_frame" value="/$(arg map_frame_id)"/>
		<arg name="goal_topic" value="$(arg current_goal_topic)"/>
	</include>

	<!-- Visualization stuff  ................. -->

	<!-- Plots bayes tracked people  ................. -->
	<node pkg="iliad_human_local_navigation" type="printBayes.py" name="printer">
		<param name="markers_topic" value="/humanMarker"/>
		<param name="tracked_humans_topic" value="$(arg topic_prefix)/people_tracker/positions"/>
	</node>

  <!-- the old rviz  ................. -->
	<node pkg="rviz" type="rviz" name="view_me" args="-d $(find iliad_human_local_navigation)/config/ncfm_experiments.rviz"/>

	<!-- This loads robot_description, for rviz -->
  <include file="$(find iliad_launch_system)/launch/robots/cititruck/$(arg prefix)/$(arg prefix).launch">
        <arg name="sim" value="true"/>
        <arg name="software" value="false"/>
  </include>

  <!-- This just publishes robot pose in odom coordiantes -->
	<node pkg="robot_pose_publisher" name="robot_pose_publisher_stamped_odom" type="robot_pose_publisher">
			<param name="robotST_topic"	    value = "$(arg topic_prefix)/robot_poseST"/>
			<param name="is_stamped"	    value = "true"/>
			<param name="base_frame"	    value = "$(arg base_frame_id)"/>
			<param name="map_frame"	    value = "$(arg prefix)/odom"/>
			<remap from="robot_pose" to="$(arg topic_prefix)/robot_pose_odom"/>
	</node>

	<!-- This just publishes robot pose in odom coordiantes -->
	<!-- What's this for? Couldn't be done using robot_pose_publisher? -->
    <node name="goal_republisher_odom" pkg="iliad_human_local_navigation" type="goal_frame_republisher.py" output="screen" respawn="true">
      <param name="in_topic"    type="string"   value="$(arg current_goal_topic)_latched"/>
      <param name="out_topic"     type="string"   value="$(arg current_goal_topic)_odom"/>
			<param name="out_frame_id"  type="string"   value="$(arg prefix)/odom"/>
    </node>

</launch>
