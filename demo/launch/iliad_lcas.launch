<?xml version="1.0"?>
<launch>

<!-- 
Demo launcher based on kmo_navserver real_single_truck_empty_map 

This should be the BIG demo launcher ...

-->



  <rosparam command="load" file="$(find orunav_params)/config/global.cfg"/>
  <rosparam command="load" file="$(find orunav_params)/config/citi1.cfg"/>

  <include file="$(find demo)/launch/robotlab_map_server.launch"/>

  <!-- mfc: Listens to goal messages and creates trajectory requests for the cititruck  -->    
  <node pkg="orunav_vehicle_execution" type="point_n_click_target_client" name="point_n_click_target_client_citi1" output="screen">
    <param name="load_operation" value="false" />
    <rosparam param="robot_ids">[1]</rosparam>
    <!-- mfc: only one truck by now -->    
    <param name="multiple_vehicles" value="false" />
  </node>

  <!-- mfc: (check) This allows several trucks to work together.   -->    
  <node pkg="orunav_coordinator_fake" type="coordinator_fake_node" name="coordinator_fake_node" output="screen">
    <!-- mfc: only one truck by now -->    
    <param name="multiple_vehicles" value="false" />
    <param name="use_ct" value="false" />  
  </node>

  <!-- ALL ROBOT SPECIFIC TASKS -->

  <group ns="robot1">
	  <param name="tf_prefix" value="robot1" />

	  <!-- TFs: Taken from gazebo models. laserscan0 roll is changed from 3.142 to 0, and from 0 to 3.142 in laserscan1-->
	  <node pkg="tf" type="static_transform_publisher" name="laser1_map" args="0.8 0 0.85 3.142 0 0 odom_base_link laserscan1 100"/>
	  <node pkg="tf" type="static_transform_publisher" name="laser0_map" args="1.4 0 0.02 0 0 0 odom_base_link laserscan0 100"/>


	  <!-- mfc: (check) Extremely complex robot - driver. Accepts trajectories and commands (check topics) to drive robot
						it also publishes laser, some tfs and odom.
	  -->    
	  <node pkg="kmo_navserver" type="kmo_navserver_node" name="kmo_navserver" output="screen">
		 <param name="host" value="192.168.100.100" />
		 <param name="enc" value="true" />
		 <param name="state" value="true" />
		 <param name="laser" value="true" />
		 <param name="sick" value="true" />
		 <param name="steering_fix_wheel_distance" value="1.190" />
		 <param name="steering_fix_wheel_distance_y" value="0.0" />
		 <param name="tf_frame_state_id" value="base_link" />
		 
		 <param name="tf_x" value="1.5" />
		 <param name="tf_y" value="0.0" />
		 <param name="tf_z" value="0.05" />
		 <remap from="vmc_navserver/laserscan" to="laserscan"/>
	  </node>

	  <!-- mfc: (check) Controls forks?   -->    
	  <node pkg="kmo_fork_control" type="fork_control_cititruck_node" name="fork_control" output="screen">
		 <param name="visualize" value="true" />
		 <param name="fork_max_moving_time" value="2.5" />
		 <param name="fork_moving_time_support_to_low" value="0.3" />
		 <param name="delay_support_to_low" value="0.2" />
	  </node>

	  <!-- mfc: this connects to can and sends speed commands   -->    
	  <node pkg="orunav_mpc" type="controller_node" name="controller" output="screen">
			<param name="robot_id" value="1" />
	  </node>

	  <!-- mfc: (check) What does this do?   -->    
	  <node pkg="orunav_motion_planner" type="get_path_service" name="get_path_service" output="screen">		
		<param name="model" value="CiTiTruck_Expanded10+20_16_1_4.0_0.2.reduced"/>
		<param name="motion_primitives_directory" value="$(find orunav_motion_planner)/Primitives/" />
		<param name="lookup_tables_directory" value="$(find orunav_motion_planner)/LookupTables/" /> 
		<param name="min_incr_path_dist" value="0.2" />
		<param name="visualize" value="true" />
	  </node>

	  <!-- mfc: (check) What does this do?   -->    
	  <node pkg="orunav_constraint_extract" type="polygonconstraint_service" name="polygonconstraint_service" output="screen">
		<param name="load_type" value="1" />
		<param name="model_type" value="2" />
		<param name="visualize" value="false" />
		<param name="save_constraints_and_path" value="true" />
		<param name="lookuptables_file" value="$(find orunav_constraint_extract)/tables/service_lookup_model2load1.dat" />
		<param name="visualize_outer_constraints" value="false" />
		<param name="visualize_only_invalid" value="false" />
		<param name="skip_overlap" value="true" />
		<param name="save_lookuptables" value="false" />
	  </node>  

	  <!-- mfc: (check) What does this do?   -->    
	  <node pkg="orunav_path_smoother" type="smoothed_path_service" name="smoothed_path_service" output="screen">
		<param name="visualize" value="true" />
		<param name="visualize_deep" value="false" />
		<param name="wheel_base" value="1.190" />
		<param name="minimize_phi_and_dist" value="true" />
		<param name="init_controls" value="true" />
		<param name="use_th_constraints" value="true" />
		<param name="use_xy_constraints" value="true" />
		<param name="phi_min" value="-1.0" /> <!-- -0.9 -->
		<param name="phi_max" value="1.0" />  <!-- 0.9 -->
		<param name="reassign_constraints" value="true" />
		<param name="reassign_iters" value="1" />
		<param name="reassign_min_distance" value="0.1" />
	  </node>  

	  <!-- mfc: (check) What does this do?   -->    
	  <node pkg="orunav_vehicle_execution" type="orunav_vehicle_execution_node" name="orunav_vehicle_execution_node_citi1" output="screen">
		<param name="visualize" value="true" />
		<param name="max_tracking_error" value="-1." />
		<param name="use_forks" value="true" />

		<param name="max_vel" value="0.3" />
		<param name="max_rotational_vel" value="0.3" />
		<param name="max_acc" value="0.1" />
	  </node>

	  <!-- mfc: Removes laser points hitting the frame. Needs to be adjusted from simulation   -->          
      <node pkg="laser_filters" type="scan_to_scan_filter_chain"
          name="safety_filter">
        <rosparam command="load" file="$(find demo)/params/safety_laser_filter.yaml" />
        <remap from="scan" to="safety_laser" />
        <remap from="scan_filtered" to="safety_laser_fil" />
      </node>
      
	  <!-- mfc: Removes laser points hitting the frame   -->          
      <node pkg="laser_filters" type="scan_to_scan_filter_chain"
          name="nav_filter">
        <rosparam command="load" file="$(find demo)/params/nav_laser_filter.yaml" />
        <remap from="scan" to="nav_laser" />
        <remap from="scan_filtered" to="nav_laser_fil" />
      </node>
      
  
  </group>

  <!-- rviz config based on original file at cititruck_description package-->
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find demo)/launch/iliad_cititruck.rviz"/>

</launch>
