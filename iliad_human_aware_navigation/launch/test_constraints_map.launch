<?xml version="1.0"?>
    <!--
    
   -->
<launch>

    <arg name="robot_id" default="4"/>
    <arg name="sim" default="true"/>

    <!-- derived args -->
    <arg name="prefix" value="robot$(arg robot_id)"/>

    <!-- args from hri -->
    <arg name="map_frame_id"          default="/map_laser2d"/>
    <arg name="map_topic_name"        default="/maps/map_laser2d"/>
    <arg name="robot_base_frame_id"   default="$(arg prefix)/base_link"/>
    <arg name="robotST_topic"         default = "/$(arg prefix)/robot_poseST"/>

    <arg name="ppl_topic"             default="/$(arg prefix)/qsr/people_tracker/positions"/>
    
    <arg name="qtc_state_topic"       default="/$(arg prefix)/qsr/qtc_state"/>        

    <arg name="vis_marker_topic"      default = "/$(arg prefix)/qsr/visualization_marker"/>

    <arg name="costmap_topic_name"        default = "/$(arg prefix)/qsr/constraints_costmap"/>
    <arg name="reports_topic_name"        default = "/$(arg prefix)/control/controller/reports"/>
    <arg name="task_topic_name"           default = "/$(arg prefix)/control/task"/>

    <arg name="path_occ_grid_topic_name"  default = "/$(arg prefix)/qsr/constraints_costmap_path"/>
    <arg name="curr_cost_topic_name"      default = "/$(arg prefix)/qsr/cost"/>

    <include file="$(find iliad_hrsi)/launch/test_qtc_generator.launch">
	    <arg name="robot_id"              value="$(arg robot_id)"/>
	    <arg name="sim"                   value="$(arg sim)"/>
	    <arg name="map_frame_id"          value="$(arg map_frame_id)"/>
	    <arg name="map_topic_name"        value="$(arg map_topic_name)"/>
	    <arg name="robot_base_frame_id"   value="$(arg robot_base_frame_id)"/>
	    <arg name="ppl_topic"             value="$(arg ppl_topic)"/>
	    <arg name="qtc_state_topic"       value="$(arg qtc_state_topic)"/>
	    <arg name="vis_marker_topic"      value="$(arg vis_marker_topic)"/>
    </include>

    <!-- the group -->
    <group ns="$(arg prefix)/qsr">

      <!-- Publishes robot pose -->
      <node pkg="robot_pose_publisher" type="robot_pose_publisher" name="robot_poseST_publisher" output="screen">
          <param name="map_frame" value="$(arg map_frame_id)"/>
          <param name="base_frame" value="$(arg robot_base_frame_id)"/>
          <param name="is_stamped" value="true"/>
          <remap from="robot_pose" to="$(arg robotST_topic)"/>
      </node>

      <!-- constraints costmap V2: creates human exclusion area -->
      <node pkg="iliad_human_aware_navigation" type="iliad_constraints_costmap_v2.py" name="constraints_costmap_server" output="log" respawn="true">
        <param name="robot_id" value="$(arg robot_id)"/>
        <param name="costmap_topic_name"                  type = "string" value= "$(arg costmap_topic_name)"/>
        <param name="map_topic_name"                      type = "string" value= "$(arg map_topic_name)"/>
        <param name="human_tracking_topic_name"           type = "string" value="$(arg ppl_topic)"/>
        <param name="robot_pose_topic_name"               type = "string" value="$(arg robotST_topic)"/>

        <param name="update_center_x"                     type = "double" value="15.3"/>
        <param name="update_center_y"                     type = "double" value="-3.03"/>
        <param name="update_width"                        type = "int" value="375"/>
        <param name="update_height"                       type = "int" value="306"/>
        <param name="update_publish_period"               type = "double" value="0.05"/>

        <!-- robot center to fork edge distance -->
        <param name="d2"                                  type = "double" value="0.65"/>  
        <!-- robot center to front laser distance -->
        <param name="d1"                                  type = "double" value="1.5"/>
        <!-- truck width -->
        <param name="w"                                   type = "double" value="0.8"/> 
        <!-- extra margin for map clearing -->
        <param name="blind_offset"                        type = "double" value="0.10"/> 

      </node>

      <!-- Extracts current task cost from constraints costmap -->
      <node pkg="iliad_human_aware_navigation" type="iliad_task_cost_node_v2.py" name="task_cost_node" output="log" respawn="true">
        <param name="robot_id" value="$(arg robot_id)"/>
        <param name="robot_pose_topic_name"            type = "string" value="$(arg robotST_topic)"/>
        <param name="costmap_topic_name"               type = "string" value= "$(arg costmap_topic_name)"/>      
        <param name="task_topic_name"                  type = "string" value= "$(arg task_topic_name)"/>
        <param name="task_frame_id"                    type = "string" value= "$(arg map_frame_id)"/>

        <param name="path_occ_grid_topic_name"         type = "string" value= "$(arg path_occ_grid_topic_name)"/>      
        <param name="curr_cost_topic_name"             type = "string" value= "$(arg curr_cost_topic_name)"/>
        <param name="update_publish_period"            type = "double" value="0.05"/> 
      </node>
 
      <!-- Upon demand, it stops the robot and asks coordinator to replan -->
      <node pkg="iliad_human_aware_navigation" type="abort_and_replan.py" name="replan_node" output="log" respawn="true">
        <param name="robot_id" value="$(arg robot_id)"/>
        <param name="task_topic_name"                  type = "string" value= "$(arg task_topic_name)"/>
        <param name="reports_topic_name"               type = "string" value = "$(arg reports_topic_name)"/>

        <param name="goal_frame_id"                    type = "string" value= "$(arg map_frame_id)"/>
        <param name="goal_topic_name"            type = "string" value="/$(arg prefix)/goal"/>

        <param name="update_task_srv_name"               type = "string" value= "/coordinator/update_task"/>      
        <param name="trigger_topic_name"         type = "string" value= "/$(arg prefix)/replan"/>      
      </node>

    </group>


</launch>






