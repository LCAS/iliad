#!/usr/bin/env python

# trajectory envelope manager dynamic reconfiguration

PACKAGE='iliad_dynamic_constraints'

from dynamic_reconfigure.parameter_generator_catkin import *
from driver_base.msg import SensorLevels

gen = ParameterGenerator()

# check http://wiki.ros.org/dynamic_reconfigure/Tutorials/SettingUpDynamicReconfigureForANode for an example
#        Name            Type      Reconfiguration level             Description                               Default  Min  Max

# Two numbers: minimal and maximal bounds // or an empty array
# Constraints.bounds_steering_velocity
gen.add("bounds_steering_velocity_enable",  bool_t, SensorLevels.RECONFIGURE_RUNNING, "Enable steering_velocity bounds constraints",   False)
gen.add("bounds_steering_velocity_min",     double_t, SensorLevels.RECONFIGURE_RUNNING, "Minimum steering_velocity bounds constraint", -3.141592)
gen.add("bounds_steering_velocity_max",     double_t, SensorLevels.RECONFIGURE_RUNNING, "Maximum steering_velocity bounds constraint", 3.141592)

# Two numbers: minimal and maximal bounds // or an empty array
# Constraints.bounds_tangential_velocity
gen.add("bounds_tangential_velocity_enable",  bool_t, SensorLevels.RECONFIGURE_RUNNING, "Enable tangential_velocity bounds constraints",   False)
gen.add("bounds_tangential_velocity_min",     double_t, SensorLevels.RECONFIGURE_RUNNING, "Minimum tangential_velocity bounds constraint", -5)
gen.add("bounds_tangential_velocity_max",     double_t, SensorLevels.RECONFIGURE_RUNNING, "Maximum tangential_velocity bounds constraint", 5)


exit(gen.generate(PACKAGE, "iliad_dynamic_constraints", "constraintSettings"))
