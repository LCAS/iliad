<?xml version="1.0"?>
    <!--
    
   -->
<launch>

    <arg name="robot_id" default="4"/>
    <arg name="sim" default="true"/>

    <!-- derived args -->
    <arg name="prefix" value="robot$(arg robot_id)"/>

    <!-- args from hri -->
    <arg name="map_frame_id"        default="/map_laser2d"/>
    <arg name="map_topic_name"      default="/maps/map_laser2d"/>
    <arg name="robot_base_frame_id" default="$(arg prefix)/base_link"/>

    <arg name="robot_topic"         default = "/$(arg prefix)/robot_pose"/>
    <arg name="robotST_topic"       default = "/$(arg prefix)/robot_poseST"/>

    <arg name="ppl_topic"           default="/$(arg prefix)/qsr/people_tracker/positions"/>
    <arg name="person_topic"        default="/$(arg prefix)/human_perception/tracked_persons"/>
    <arg name="dperson_topic"        default="/$(arg prefix)/human_perception/detected_persons"/>
    
    <arg name="qtc_state_topic"           default="/$(arg prefix)/qtc_state_topics"/>
        
    <arg name="vis_marker_topic"    default = "/$(arg prefix)/qsr/visualization_marker"/>
    <arg name="vel_costmap_topic"   default = "/$(arg prefix)/qsr/velocity_costmap"/>
    <arg name="origin_topic"        default = "/$(arg prefix)/qsr/origin"/>
           
    <arg name="costmap_topic_name"  default = "/$(arg prefix)/qsr/constraints_costmap"/>
    <arg name="reports_topic_name"  default = "/$(arg prefix)/control/controller/reports"/>
    <arg name="task_topic_name"     default = "/$(arg prefix)/control/task"/>

    <arg name="path_occ_grid_topic_name"  default = "/$(arg prefix)/qsr/constraints_costmap_path"/>
    <arg name="curr_cost_topic_name"  default = "/$(arg prefix)/qsr/cost"/>



    <!-- the group -->
    <group ns="$(arg prefix)/qsr">

      <!-- Publish groundtruth tracks and detections from Gazebo -->
      <node name="groundtruth_tracks_from_gazebo" pkg="iliad_human_perception_launch" type="groundtruth_tracks_from_gazebo.py" respawn="true"  if="$(arg sim)">
              <remap from="/groundtruth/detected_persons" to="$(arg dperson_topic)"/>
              <remap from="/groundtruth/tracked_persons" to="$(arg person_topic)"/>            
      </node>

      <!--  Draws QTCs -->
      <node name="QSRview" pkg="iliad_dynamic_constraints" type="QTCplot.py" output="screen">
        <param name="robot_id" value="$(arg robot_id)"/>
        
        <!--  peopletracker(bayes, from STRANDS) OR trackedpersons (SPENCER) -->
        <param name="human_detection_method" value="trackedpersons"/>

        <!-- acording to the detection method, human detections would be in the corresponding topic -->
        <param name="peopletracker_topic" value="$(arg ppl_topic)"/>
        <param name="human_tracking_topic" value="$(arg person_topic)"/>

        <param name="reports_topic" value="/$(arg prefix)/control/controller/reports"/>
        <param name="base_frame" value="$(arg robot_base_frame_id)"/>
        <param name="global_frame" value="$(arg map_frame_id)"/>        
        <param name="tf_timeout" value="1"/>
        <param name="sampling_time" value="0.6"/>
        <param name="qtc_state_topic" value="$(arg qtc_state_topic)"/>
   
      </node>

      <!-- casts spencer detection to bayes data format -->
      <node pkg="iliad_human_local_navigation" type="spencer_to_bayes.py" name="spenc2bay" output="screen">
        <param name="robot_id" value="$(arg robot_id)"/>

        <param name="ppl_topic"           type="string"  value="$(arg ppl_topic)"/>
        <param name="person_topic"        type="string"  value="$(arg person_topic)"/>
        <param name="target_frame"        type="string"  value="$(arg robot_base_frame_id)"/>
      </node>

      <!-- Publishes robot pose -->
      <node pkg="robot_pose_publisher" type="robot_pose_publisher" name="robot_poseST_publisher" output="screen">
          <param name="map_frame" value="$(arg map_frame_id)"/>
          <param name="base_frame" value="$(arg robot_base_frame_id)"/>
          <param name="is_stamped" value="true"/>
          <remap from="robot_pose" to="$(arg robotST_topic)"/>
      </node>

      <!-- constraints costmap V2: human exclusion area -->
      <node pkg="iliad_velocity_costmaps" type="iliad_constraints_costmap_v2.py" name="constraints_costmap_server" output="screen" respawn="true">
        <param name="robot_id" value="$(arg robot_id)"/>
        <param name="costmap_topic_name"                  type = "string" value= "$(arg costmap_topic_name)"/>
        <param name="map_topic_name"                      type = "string" value= "$(arg map_topic_name)"/>
        <param name="human_tracking_topic_name"           type = "string" value="$(arg ppl_topic)"/>
        <param name="robot_pose_topic_name"               type = "string" value="$(arg robotST_topic)"/>

        <param name="update_center_x"                     type = "double" value="15.3"/>
        <param name="update_center_y"                     type = "double" value="-3.03"/>
        <param name="update_width"                        type = "int" value="375"/>
        <param name="update_height"                       type = "int" value="306"/>
        <param name="update_publish_period"               type = "double" value="0.05"/>
        <param name="robot_radius"                        type = "double" value="1.0"/>

      </node>

      <!-- Extracts current task cost
      <node pkg="iliad_velocity_costmaps" type="iliad_task_cost_node_v2.py" name="task_cost_node" output="screen" respawn="true">
        <param name="robot_id" value="$(arg robot_id)"/>

        <param name="robot_pose_topic_name"               type = "string" value="$(arg robotST_topic)"/>
        <param name="costmap_topic_name"               type = "string" value= "$(arg costmap_topic_name)"/>      
        <param name="task_topic_name"                  type = "string" value= "$(arg task_topic_name)"/>
        <param name="task_frame_id"                    type = "string" value= "$(arg map_frame_id)"/>

        <param name="path_occ_grid_topic_name"         type = "string" value= "$(arg path_occ_grid_topic_name)"/>      
        <param name="curr_cost_topic_name"             type = "string" value= "$(arg curr_cost_topic_name)"/>
        <param name="update_publish_period"               type = "double" value="0.05"/>

  
      </node>
 -->

      <!-- constraints costmap Alpha: qtc based constraints costmap
      <node pkg="iliad_velocity_costmaps" type="iliad_velocity_costmap_server.py" name="velocity_costmap_server" output="screen" respawn="true">
        <param name="robot_id" value="$(arg robot_id)"/>

        <param name="qtc_topic"                           type = "string"   value="$(arg qtc_state_topic)"/>
        <param name="vis_marker_topic"                    type = "string" value= "$(arg vis_marker_topic)"/>
        <param name="vel_costmap_topic"                   type = "string" value= "$(arg vel_costmap_topic)"/>
        <param name="origin_topic"                        type = "string" value= "$(arg origin_topic)"/>
        <param name="base_link_tf"                        type = "string" value= "$(arg robot_base_frame_id)"/>
        <param name="ppl_topic"                           type = "string"   value="$(arg ppl_topic)"/>
        <param name="qtc_rules_file"                      type = "string"   value="$(find iliad_velocity_costmaps)/cfg/rules_qtc.yaml"/>
          
        <param name="min_rotat_vel"                      type = "string"   value="0.01"/>
        <param name="max_rotat_vel"                      type = "string"   value="0.5"/>
        <param name="min_trans_vel"                      type = "string"   value="0.01"/>
        <param name="max_rotat_vel"                      type = "string"   value="1.0"/>
        <param name="vel_constraints_topic"              type = "string"   value="/$(arg prefix)/velocity_constraints"/>
      </node>
      -->
      
    </group>


</launch>






